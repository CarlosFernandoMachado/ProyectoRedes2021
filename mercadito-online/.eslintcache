[{"D:\\Universidad\\Redes\\ProyectoRedes2021\\mercadito-online\\src\\index.js":"1","D:\\Universidad\\Redes\\ProyectoRedes2021\\mercadito-online\\src\\App.js":"2","D:\\Universidad\\Redes\\ProyectoRedes2021\\mercadito-online\\src\\Main.js":"3","D:\\Universidad\\Redes\\ProyectoRedes2021\\mercadito-online\\src\\Context.js":"4","D:\\Universidad\\Redes\\ProyectoRedes2021\\mercadito-online\\src\\carrito\\Cart.js":"5","D:\\Universidad\\Redes\\ProyectoRedes2021\\mercadito-online\\src\\Producto\\Producto.js":"6","D:\\Universidad\\Redes\\ProyectoRedes2021\\mercadito-online\\src\\Compras\\Compras.js":"7","D:\\Universidad\\Redes\\ProyectoRedes2021\\mercadito-online\\src\\Admin\\Admin.js":"8","D:\\Universidad\\Redes\\ProyectoRedes2021\\mercadito-online\\src\\Navbar\\Navbar.js":"9","D:\\Universidad\\Redes\\ProyectoRedes2021\\mercadito-online\\src\\Autenticacion\\Autenticacion.js":"10","D:\\Universidad\\Redes\\ProyectoRedes2021\\mercadito-online\\src\\Crear-Modificar-Eliminar-Productos\\CrearProducto.js":"11","D:\\Universidad\\Redes\\ProyectoRedes2021\\mercadito-online\\src\\Crear-Modificar-Eliminar-Productos\\ModificarProductos.js":"12","D:\\Universidad\\Redes\\ProyectoRedes2021\\mercadito-online\\src\\Pedidos\\Pedidos.js":"13"},{"size":240,"mtime":1616081256738,"results":"14","hashOfConfig":"15"},{"size":225,"mtime":1616081256693,"results":"16","hashOfConfig":"15"},{"size":1809,"mtime":1616177988875,"results":"17","hashOfConfig":"15"},{"size":4584,"mtime":1616206716952,"results":"18","hashOfConfig":"15"},{"size":2659,"mtime":1616003803890,"results":"19","hashOfConfig":"15"},{"size":2902,"mtime":1615871126098,"results":"20","hashOfConfig":"15"},{"size":4516,"mtime":1616081329031,"results":"21","hashOfConfig":"15"},{"size":4256,"mtime":1616206859827,"results":"22","hashOfConfig":"15"},{"size":2610,"mtime":1616102290810,"results":"23","hashOfConfig":"15"},{"size":3971,"mtime":1616173055441,"results":"24","hashOfConfig":"15"},{"size":2936,"mtime":1616206716968,"results":"25","hashOfConfig":"15"},{"size":1511,"mtime":1616206716997,"results":"26","hashOfConfig":"15"},{"size":6510,"mtime":1616185264232,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"kfmo2c",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},"D:\\Universidad\\Redes\\ProyectoRedes2021\\mercadito-online\\src\\index.js",[],["60","61"],"D:\\Universidad\\Redes\\ProyectoRedes2021\\mercadito-online\\src\\App.js",[],"D:\\Universidad\\Redes\\ProyectoRedes2021\\mercadito-online\\src\\Main.js",[],"D:\\Universidad\\Redes\\ProyectoRedes2021\\mercadito-online\\src\\Context.js",["62"],"D:\\Universidad\\Redes\\ProyectoRedes2021\\mercadito-online\\src\\carrito\\Cart.js",[],"D:\\Universidad\\Redes\\ProyectoRedes2021\\mercadito-online\\src\\Producto\\Producto.js",["63"],"import React, {Component} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {DataContext} from '../Context';\r\n\r\nexport class Producto extends Component {\r\n  static contextType = DataContext;\r\n  render() {\r\n    const {products,addCart} = this.context;\r\n    console.log(products);\r\n    function createData(id, name, cantidad, precio) {\r\n      return {id, name, cantidad, precio };\r\n    }\r\n    const rows = [\r\n      createData(1,'Frozen yoghurt', 5, 50),\r\n      createData(2,'Ice cream sandwich', 10, 18),\r\n      createData(3,'Eclair', 2, 80),\r\n      createData(4,'Cupcake', 20, 8),\r\n      createData(5,'Gingerbread', 17, 12),\r\n    ];\r\n\r\n    const StyledTableCell = withStyles((theme) => ({\r\n      head: {\r\n        backgroundColor: theme.palette.common.black,\r\n        color: theme.palette.common.white,\r\n      },\r\n      body: {\r\n        fontSize: 14,\r\n      },\r\n    }))(TableCell);\r\n\r\n    const StyledTableRow = withStyles((theme) => ({\r\n      root: {\r\n        '&:nth-of-type(odd)': {\r\n          backgroundColor: theme.palette.action.hover,\r\n        },\r\n      },\r\n    }))(TableRow);\r\n\r\n    const StyledTable = withStyles((theme) => ({\r\n      root: {\r\n          minWidth: 700,\r\n      },\r\n    }))(Table);\r\n\r\n    return (\r\n      <div id=\"product\">\r\n      <TableContainer component={Paper}>\r\n        <StyledTable>\r\n          <TableHead>\r\n            <TableRow>\r\n              <StyledTableCell>Nombre</StyledTableCell>\r\n              <StyledTableCell align=\"right\">Cantidad</StyledTableCell>\r\n              <StyledTableCell align=\"right\">Precio</StyledTableCell>\r\n              <StyledTableCell align=\"right\">Producto a comprar</StyledTableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {products.map((product) => (\r\n              <StyledTableRow key={product.id}>\r\n                <StyledTableCell component=\"th\" scope=\"row\">{product.title}</StyledTableCell>\r\n                <StyledTableCell align=\"right\">{product.cantidad}</StyledTableCell>\r\n                <StyledTableCell align=\"right\">{product.precio}</StyledTableCell>\r\n                <StyledTableCell align=\"right\">\r\n                  <Button variant=\"contained\" color=\"primary\" onClick={()=> addCart(product.id)}>Agregar al carrito</Button>\r\n                </StyledTableCell>\r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </StyledTable>\r\n      </TableContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Producto;","D:\\Universidad\\Redes\\ProyectoRedes2021\\mercadito-online\\src\\Compras\\Compras.js",["64","65","66"],"import React from 'react'\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport {DataContext} from '../Context'\r\n\r\nclass Compras extends React.Component {\r\n    static contextType = DataContext;\r\n\r\n    componentDidMount(){\r\n        this.context.getTotal();\r\n    }\r\n    render() {\r\n        const {cart,increase,reduction,removeProduct,total} = this.context;\r\n\r\n        const StyledTableCell = withStyles((theme) => ({\r\n            head: {\r\n                backgroundColor: theme.palette.common.black,\r\n                color: theme.palette.common.white,\r\n            },\r\n            body: {\r\n                fontSize: 14,\r\n            },\r\n        }))(TableCell);\r\n\r\n        const StyledTableRow = withStyles((theme) => ({\r\n            root: {\r\n                '&:nth-of-type(odd)': {\r\n                    backgroundColor: theme.palette.action.hover,\r\n                },\r\n            },\r\n        }))(TableRow);\r\n\r\n        const StyledTable = withStyles((theme) => ({\r\n            root: {\r\n                minWidth: 700,\r\n            },\r\n        }))(Table);\r\n\r\n        //Impuesto\r\n        const TAX_RATE = 0.07;\r\n\r\n        //Formato con 2 decimales\r\n        function FormatoTotales(num) {\r\n            return `${num.toFixed(2)}`;\r\n        }\r\n\r\n        const invoiceSubtotal = total;\r\n        const invoiceTaxes = TAX_RATE * invoiceSubtotal;\r\n        const invoiceTotal = invoiceTaxes + invoiceSubtotal;\r\n        return (\r\n            <TableContainer component={Paper}>\r\n                <StyledTable>\r\n                    <TableHead>\r\n                        <StyledTableRow>\r\n                            <StyledTableCell>Articulo</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Cantidad a comprar</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Precio unitario</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Total Producto</StyledTableCell>\r\n                        </StyledTableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {cart.map((row) => (\r\n                            <StyledTableRow key={row.id}>\r\n                                <StyledTableCell>{row.nombre}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{row.cantidad}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{row.precio}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{FormatoTotales(row.precio)}</StyledTableCell>\r\n                            </StyledTableRow>\r\n                        ))}\r\n\r\n                        <StyledTableRow>\r\n                            <StyledTableCell rowSpan={3} />\r\n                            <StyledTableCell colSpan={2}>Subtotal</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">{FormatoTotales(total)}</StyledTableCell>\r\n                        </StyledTableRow>\r\n                        <StyledTableRow>\r\n                            <StyledTableCell>I.S.V</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">{`${(TAX_RATE * 100).toFixed(0)} %`}</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">{FormatoTotales(invoiceTaxes)}</StyledTableCell>\r\n                        </StyledTableRow>\r\n                        <StyledTableRow>\r\n                            <StyledTableCell colSpan={2}>Total</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">{FormatoTotales(invoiceTotal)}</StyledTableCell>\r\n                        </StyledTableRow>\r\n                        <StyledTableRow>\r\n                            <StyledTableCell colSpan={3}></StyledTableCell>\r\n                            <StyledTableCell align=\"right\">\r\n                                <Button variant=\"contained\">Comprar</Button>\r\n                            </StyledTableCell>\r\n                        </StyledTableRow>\r\n                    </TableBody>\r\n                </StyledTable>\r\n            </TableContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Compras;",["67","68"],"D:\\Universidad\\Redes\\ProyectoRedes2021\\mercadito-online\\src\\Admin\\Admin.js",["69"],"D:\\Universidad\\Redes\\ProyectoRedes2021\\mercadito-online\\src\\Navbar\\Navbar.js",[],"D:\\Universidad\\Redes\\ProyectoRedes2021\\mercadito-online\\src\\Autenticacion\\Autenticacion.js",["70","71","72","73","74","75","76"],"import React from 'react';\r\nimport './Autenticacion.css'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link } from \"react-router-dom\";\r\nimport { DataContext } from '../Context';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport { Redirect } from 'react-router-dom';\r\nclass Autenticacion extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { usuario: [], email: \"\", password: \"\", redirect: false }\r\n    this.handleEmail = this.handleEmail.bind(this);\r\n    this.handlePassword = this.handlePassword.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  static contextType = DataContext;\r\n\r\n  handleEmail(event) {\r\n    this.setState({ email: event.target.value });\r\n  }\r\n  handlePassword(event) {\r\n    this.setState({ password: event.target.value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    this.state.usuario.map((myuser) => {\r\n      if (myuser.email === this.state.email) {\r\n        if (myuser.password === this.state.password) {\r\n          if (myuser.admin === true) {\r\n            this.props.Autenticar();\r\n            this.setState({ redirect: true });\r\n          }\r\n\r\n\r\n        }\r\n      }\r\n    })\r\n    event.preventDefault();\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://localhost:9000/users\")\r\n      .then(async res => {\r\n        const data = await res.json();\r\n\r\n        if (!res.ok) {\r\n          const error = (data && data.message) || Response.status.Text;\r\n          return Promise.reject(error);\r\n        }\r\n        this.setState({ usuario: data });\r\n\r\n      })\r\n      .catch(error => {\r\n\r\n      })\r\n  }\r\n  login() {\r\n    this.state.usuario.map((myuser) => {\r\n      if (myuser.email === this.state.email) {\r\n        if (myuser.password === this.state.password) {\r\n          if (myuser.admin === true) {\r\n            this.props.Autenticar();\r\n            return \"/admin\"\r\n          } else {\r\n            return \"/autenticacion\"\r\n          }\r\n\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { EstaAutenticado, usuarios, login } = this.context;\r\n    return (\r\n      <div>\r\n       \r\n        { this.state.redirect ? (<Redirect push to=\"/admin\" />) : null}\r\n        <Container component=\"main\" maxWidth=\"xs\" >\r\n          <CssBaseline />\r\n          <div className=\"paper\">\r\n            <Avatar className=\"avatar\">\r\n              <AccountCircleIcon fontSize=\"large\" />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Autenticarse\r\n        </Typography>\r\n            <form className=\"form\" noValidate onSubmit={this.handleSubmit}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"usuario\"\r\n                label=\"Usuario\"\r\n                autoFocus\r\n                value={this.state.email} onChange={this.handleEmail}\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label=\"Contraseña\"\r\n                type=\"password\"\r\n                id=\"contraseña\"\r\n                value={this.state.password} onChange={this.handlePassword}\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className=\"submit\"\r\n                value=\"Submit\"\r\n              >\r\n                Acceder\r\n          </Button>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Autenticacion;","D:\\Universidad\\Redes\\ProyectoRedes2021\\mercadito-online\\src\\Crear-Modificar-Eliminar-Productos\\CrearProducto.js",["77"],"D:\\Universidad\\Redes\\ProyectoRedes2021\\mercadito-online\\src\\Crear-Modificar-Eliminar-Productos\\ModificarProductos.js",["78"],"D:\\Universidad\\Redes\\ProyectoRedes2021\\mercadito-online\\src\\Pedidos\\Pedidos.js",["79","80"],"import React from 'react'\r\n\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nclass Pedidos extends React.Component {\r\n    render() {\r\n        const StyledTableCell = withStyles((theme) => ({\r\n            head: {\r\n                backgroundColor: theme.palette.common.black,\r\n                color: theme.palette.common.white,\r\n            },\r\n            body: {\r\n                fontSize: 14,\r\n            },\r\n        }))(TableCell);\r\n\r\n        const StyledTableRow = withStyles((theme) => ({\r\n            root: {\r\n                '&:nth-of-type(odd)': {\r\n                    backgroundColor: theme.palette.action.hover,\r\n                },\r\n            },\r\n        }))(TableRow);\r\n        function createData(pedido, cliente, fecha, hora, total, precio) {\r\n            return {\r\n                pedido,\r\n                cliente,\r\n                fecha,\r\n                hora,\r\n                total,\r\n                precio,\r\n                history: [\r\n                    { nombre: '2020-01-05', precio: '11091700', cantidad: 3 },\r\n                    { nombre: '2020-01-02', precio: 'Anonymous', cantidad: 1 },\r\n                ],\r\n            };\r\n        }\r\n        const rows = [\r\n            createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99),\r\n            createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\r\n            createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\r\n            createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\r\n            createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5),\r\n        ];\r\n        return (\r\n            <TableContainer component={Paper}>\r\n                <Table aria-label=\"collapsible table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell />\r\n                            <StyledTableCell>Pedido</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Cliente</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Fecha</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Hora</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">Total</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <Row key={row.name} row={row} />\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        );\r\n    }\r\n}\r\n\r\nconst useRowStyles = makeStyles({\r\n    root: {\r\n        '& > *': {\r\n            borderBottom: 'unset',\r\n        },\r\n    },\r\n});\r\n\r\nfunction Row(props) {\r\n    const { row } = props;\r\n    const [open, setOpen] = React.useState(false);\r\n    const classes = useRowStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <TableRow className={classes.root}>\r\n                <TableCell>\r\n                    <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n                        {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n                    </IconButton>\r\n                </TableCell>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                    {row.pedido}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.cliente}</TableCell>\r\n                <TableCell align=\"right\">{row.fecha}</TableCell>\r\n                <TableCell align=\"right\">{row.hora}</TableCell>\r\n                <TableCell align=\"right\">{row.total}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n                <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n                    <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                        <Box margin={1}>\r\n                            <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                Producto\r\n                </Typography>\r\n                            <Table size=\"small\" aria-label=\"purchases\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell>Nombre</TableCell>\r\n                                        <TableCell>Precio</TableCell>\r\n                                        <TableCell align=\"right\">Cantidad</TableCell>\r\n                                        <TableCell align=\"right\">Total</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {row.history.map((historyRow) => (\r\n                                        <TableRow key={historyRow.date}>\r\n                                            <TableCell component=\"th\" scope=\"row\">\r\n                                                {historyRow.nombre}\r\n                                            </TableCell>\r\n                                            <TableCell>{historyRow.precio}</TableCell>\r\n                                            <TableCell align=\"right\">{historyRow.cantidad}</TableCell>\r\n                                            <TableCell align=\"right\">\r\n                                                {Math.round(historyRow.cantidad * row.precio * 100) / 100}\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Box>\r\n                    </Collapse>\r\n                </TableCell>\r\n            </TableRow>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Pedidos;",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":30,"column":26,"nodeType":"87","messageId":"88","endLine":30,"endColumn":41},{"ruleId":"85","severity":1,"message":"89","line":21,"column":11,"nodeType":"87","messageId":"88","endLine":21,"endColumn":15},{"ruleId":"85","severity":1,"message":"90","line":21,"column":21,"nodeType":"87","messageId":"88","endLine":21,"endColumn":29},{"ruleId":"85","severity":1,"message":"91","line":21,"column":30,"nodeType":"87","messageId":"88","endLine":21,"endColumn":39},{"ruleId":"85","severity":1,"message":"92","line":21,"column":40,"nodeType":"87","messageId":"88","endLine":21,"endColumn":53},{"ruleId":"81","replacedBy":"93"},{"ruleId":"83","replacedBy":"94"},{"ruleId":"85","severity":1,"message":"89","line":67,"column":11,"nodeType":"87","messageId":"88","endLine":67,"endColumn":15},{"ruleId":"85","severity":1,"message":"95","line":10,"column":10,"nodeType":"87","messageId":"88","endLine":10,"endColumn":14},{"ruleId":"85","severity":1,"message":"96","line":12,"column":8,"nodeType":"87","messageId":"88","endLine":12,"endColumn":14},{"ruleId":"97","severity":1,"message":"98","line":32,"column":37,"nodeType":"99","messageId":"100","endLine":32,"endColumn":39},{"ruleId":"97","severity":1,"message":"101","line":64,"column":37,"nodeType":"99","messageId":"102","endLine":64,"endColumn":39},{"ruleId":"85","severity":1,"message":"86","line":80,"column":13,"nodeType":"87","messageId":"88","endLine":80,"endColumn":28},{"ruleId":"85","severity":1,"message":"103","line":80,"column":30,"nodeType":"87","messageId":"88","endLine":80,"endColumn":38},{"ruleId":"85","severity":1,"message":"104","line":80,"column":40,"nodeType":"87","messageId":"88","endLine":80,"endColumn":45},{"ruleId":"85","severity":1,"message":"105","line":39,"column":15,"nodeType":"87","messageId":"88","endLine":39,"endColumn":30},{"ruleId":"85","severity":1,"message":"106","line":7,"column":8,"nodeType":"87","messageId":"88","endLine":7,"endColumn":13},{"ruleId":"85","severity":1,"message":"107","line":3,"column":8,"nodeType":"87","messageId":"88","endLine":3,"endColumn":17},{"ruleId":"85","severity":1,"message":"108","line":31,"column":15,"nodeType":"87","messageId":"88","endLine":31,"endColumn":29},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-unused-vars","'EstaAutenticado' is assigned a value but never used.","Identifier","unusedVar","'rows' is assigned a value but never used.","'increase' is assigned a value but never used.","'reduction' is assigned a value but never used.","'removeProduct' is assigned a value but never used.",["109"],["110"],"'Link' is defined but never used.","'Navbar' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'usuarios' is assigned a value but never used.","'login' is assigned a value but never used.","'StyledTextField' is assigned a value but never used.","'axios' is defined but never used.","'PropTypes' is defined but never used.","'StyledTableRow' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]